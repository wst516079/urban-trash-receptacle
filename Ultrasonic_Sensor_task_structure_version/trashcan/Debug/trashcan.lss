
trashcan.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000b8e  00000c22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b8e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000043  00800110  00800110  00000c32  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c32  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010cb  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a74  00000000  00000000  00001e43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ff  00000000  00000000  000028b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a8  00000000  00000000  00002fb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006cf  00000000  00000000  00003160  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000081d  00000000  00000000  0000382f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  0000404c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	72 c1       	rjmp	.+740    	; 0x31a <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e8       	ldi	r30, 0x8E	; 142
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e1       	ldi	r26, 0x10	; 16
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 35       	cpi	r26, 0x53	; 83
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	67 d1       	rcall	.+718    	; 0x392 <main>
  c4:	62 c5       	rjmp	.+2756   	; 0xb8a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <SMTick2>:
		if(c==0){return b;}
		a = b;
b = c;
	}
	return 0;
}
  c8:	00 97       	sbiw	r24, 0x00	; 0
  ca:	19 f0       	breq	.+6      	; 0xd2 <SMTick2+0xa>
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	31 f0       	breq	.+12     	; 0xdc <SMTick2+0x14>
  d0:	09 c0       	rjmp	.+18     	; 0xe4 <SMTick2+0x1c>
  d2:	4e 9b       	sbis	0x09, 6	; 9
  d4:	07 c0       	rjmp	.+14     	; 0xe4 <SMTick2+0x1c>
  d6:	4e 99       	sbic	0x09, 6	; 9
  d8:	24 c0       	rjmp	.+72     	; 0x122 <SMTick2+0x5a>
  da:	04 c0       	rjmp	.+8      	; 0xe4 <SMTick2+0x1c>
  dc:	4e 9b       	sbis	0x09, 6	; 9
  de:	02 c0       	rjmp	.+4      	; 0xe4 <SMTick2+0x1c>
  e0:	89 b1       	in	r24, 0x09	; 9
  e2:	1f c0       	rjmp	.+62     	; 0x122 <SMTick2+0x5a>
  e4:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <signal_time>
  e8:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <signal_time+0x1>
  ec:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <signal_time+0x2>
  f0:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <signal_time+0x3>
  f4:	00 97       	sbiw	r24, 0x00	; 0
  f6:	a1 05       	cpc	r26, r1
  f8:	b1 05       	cpc	r27, r1
  fa:	49 f1       	breq	.+82     	; 0x14e <SMTick2+0x86>
  fc:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <output>
 100:	90 93 42 01 	sts	0x0142, r25	; 0x800142 <output+0x1>
 104:	a0 93 43 01 	sts	0x0143, r26	; 0x800143 <output+0x2>
 108:	b0 93 44 01 	sts	0x0144, r27	; 0x800144 <output+0x3>
 10c:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <signal_time>
 110:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <signal_time+0x1>
 114:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <signal_time+0x2>
 118:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <signal_time+0x3>
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	08 95       	ret
 122:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <signal_time>
 126:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <signal_time+0x1>
 12a:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <signal_time+0x2>
 12e:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <signal_time+0x3>
 132:	01 96       	adiw	r24, 0x01	; 1
 134:	a1 1d       	adc	r26, r1
 136:	b1 1d       	adc	r27, r1
 138:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <signal_time>
 13c:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <signal_time+0x1>
 140:	a0 93 47 01 	sts	0x0147, r26	; 0x800147 <signal_time+0x2>
 144:	b0 93 48 01 	sts	0x0148, r27	; 0x800148 <signal_time+0x3>
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	08 95       	ret
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	08 95       	ret

00000154 <SMTick4>:
 154:	02 97       	sbiw	r24, 0x02	; 2
 156:	18 f0       	brcs	.+6      	; 0x15e <SMTick4+0xa>
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	08 95       	ret
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	08 95       	ret

00000164 <SMTick1>:
 164:	82 30       	cpi	r24, 0x02	; 2
 166:	91 05       	cpc	r25, r1
 168:	10 f4       	brcc	.+4      	; 0x16e <SMTick1+0xa>
 16a:	00 97       	sbiw	r24, 0x00	; 0
 16c:	59 f4       	brne	.+22     	; 0x184 <SMTick1+0x20>
 16e:	12 b8       	out	0x02, r1	; 2
 170:	00 c0       	rjmp	.+0      	; 0x172 <SMTick1+0xe>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	82 b9       	out	0x02, r24	; 2
 176:	83 e0       	ldi	r24, 0x03	; 3
 178:	8a 95       	dec	r24
 17a:	f1 f7       	brne	.-4      	; 0x178 <SMTick1+0x14>
 17c:	00 00       	nop
 17e:	12 b8       	out	0x02, r1	; 2
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	08 95       	ret

00000186 <delay_ms>:
 186:	18 16       	cp	r1, r24
 188:	19 06       	cpc	r1, r25
 18a:	5c f0       	brlt	.+22     	; 0x1a2 <delay_ms+0x1c>
 18c:	08 95       	ret
 18e:	00 00       	nop
 190:	21 50       	subi	r18, 0x01	; 1
 192:	31 09       	sbc	r19, r1
 194:	e1 f7       	brne	.-8      	; 0x18e <delay_ms+0x8>
 196:	4f 5f       	subi	r20, 0xFF	; 255
 198:	5f 4f       	sbci	r21, 0xFF	; 255
 19a:	84 17       	cp	r24, r20
 19c:	95 07       	cpc	r25, r21
 19e:	19 f4       	brne	.+6      	; 0x1a6 <delay_ms+0x20>
 1a0:	08 95       	ret
 1a2:	40 e0       	ldi	r20, 0x00	; 0
 1a4:	50 e0       	ldi	r21, 0x00	; 0
 1a6:	27 e0       	ldi	r18, 0x07	; 7
 1a8:	33 e0       	ldi	r19, 0x03	; 3
 1aa:	f1 cf       	rjmp	.-30     	; 0x18e <delay_ms+0x8>

000001ac <LCD_WriteCommand>:
 1ac:	5d 98       	cbi	0x0b, 5	; 11
 1ae:	88 b9       	out	0x08, r24	; 8
 1b0:	5f 9a       	sbi	0x0b, 7	; 11
 1b2:	00 00       	nop
 1b4:	5f 98       	cbi	0x0b, 7	; 11
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	e5 cf       	rjmp	.-54     	; 0x186 <delay_ms>
 1bc:	08 95       	ret

000001be <LCD_ClearScreen>:
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	f5 cf       	rjmp	.-22     	; 0x1ac <LCD_WriteCommand>
 1c2:	08 95       	ret

000001c4 <LCD_Cursor>:
 1c4:	81 31       	cpi	r24, 0x11	; 17
 1c6:	18 f4       	brcc	.+6      	; 0x1ce <LCD_Cursor+0xa>
 1c8:	81 58       	subi	r24, 0x81	; 129
 1ca:	f0 cf       	rjmp	.-32     	; 0x1ac <LCD_WriteCommand>
 1cc:	08 95       	ret
 1ce:	81 55       	subi	r24, 0x51	; 81
 1d0:	ed cf       	rjmp	.-38     	; 0x1ac <LCD_WriteCommand>
 1d2:	08 95       	ret

000001d4 <LCD_init>:
 1d4:	84 e6       	ldi	r24, 0x64	; 100
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	d6 df       	rcall	.-84     	; 0x186 <delay_ms>
 1da:	88 e3       	ldi	r24, 0x38	; 56
 1dc:	e7 df       	rcall	.-50     	; 0x1ac <LCD_WriteCommand>
 1de:	86 e0       	ldi	r24, 0x06	; 6
 1e0:	e5 df       	rcall	.-54     	; 0x1ac <LCD_WriteCommand>
 1e2:	8f e0       	ldi	r24, 0x0F	; 15
 1e4:	e3 df       	rcall	.-58     	; 0x1ac <LCD_WriteCommand>
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	e1 df       	rcall	.-62     	; 0x1ac <LCD_WriteCommand>
 1ea:	8a e0       	ldi	r24, 0x0A	; 10
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	cb cf       	rjmp	.-106    	; 0x186 <delay_ms>
 1f0:	08 95       	ret

000001f2 <LCD_WriteData>:
 1f2:	5d 9a       	sbi	0x0b, 5	; 11
 1f4:	88 b9       	out	0x08, r24	; 8
 1f6:	5f 9a       	sbi	0x0b, 7	; 11
 1f8:	00 00       	nop
 1fa:	5f 98       	cbi	0x0b, 7	; 11
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	c2 cf       	rjmp	.-124    	; 0x186 <delay_ms>
 202:	08 95       	ret

00000204 <LCD_DisplayString>:
 204:	0f 93       	push	r16
 206:	1f 93       	push	r17
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	18 2f       	mov	r17, r24
 20e:	eb 01       	movw	r28, r22
 210:	d6 df       	rcall	.-84     	; 0x1be <LCD_ClearScreen>
 212:	88 81       	ld	r24, Y
 214:	88 23       	and	r24, r24
 216:	51 f0       	breq	.+20     	; 0x22c <LCD_DisplayString+0x28>
 218:	01 e0       	ldi	r16, 0x01	; 1
 21a:	01 0f       	add	r16, r17
 21c:	81 2f       	mov	r24, r17
 21e:	d2 df       	rcall	.-92     	; 0x1c4 <LCD_Cursor>
 220:	89 91       	ld	r24, Y+
 222:	e7 df       	rcall	.-50     	; 0x1f2 <LCD_WriteData>
 224:	10 2f       	mov	r17, r16
 226:	88 81       	ld	r24, Y
 228:	81 11       	cpse	r24, r1
 22a:	f6 cf       	rjmp	.-20     	; 0x218 <LCD_DisplayString+0x14>
 22c:	df 91       	pop	r29
 22e:	cf 91       	pop	r28
 230:	1f 91       	pop	r17
 232:	0f 91       	pop	r16
 234:	08 95       	ret

00000236 <SMTick3>:
 236:	02 97       	sbiw	r24, 0x02	; 2
 238:	a8 f5       	brcc	.+106    	; 0x2a4 <SMTick3+0x6e>
 23a:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <output>
 23e:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <output+0x1>
 242:	a0 91 43 01 	lds	r26, 0x0143	; 0x800143 <output+0x2>
 246:	b0 91 44 01 	lds	r27, 0x0144	; 0x800144 <output+0x3>
 24a:	b6 95       	lsr	r27
 24c:	a7 95       	ror	r26
 24e:	97 95       	ror	r25
 250:	87 95       	ror	r24
 252:	bf 93       	push	r27
 254:	af 93       	push	r26
 256:	9f 93       	push	r25
 258:	8f 93       	push	r24
 25a:	8c e0       	ldi	r24, 0x0C	; 12
 25c:	91 e0       	ldi	r25, 0x01	; 1
 25e:	9f 93       	push	r25
 260:	8f 93       	push	r24
 262:	89 e4       	ldi	r24, 0x49	; 73
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	9f 93       	push	r25
 268:	8f 93       	push	r24
 26a:	b4 d1       	rcall	.+872    	; 0x5d4 <sprintf>
 26c:	8d b7       	in	r24, 0x3d	; 61
 26e:	9e b7       	in	r25, 0x3e	; 62
 270:	08 96       	adiw	r24, 0x08	; 8
 272:	0f b6       	in	r0, 0x3f	; 63
 274:	f8 94       	cli
 276:	9e bf       	out	0x3e, r25	; 62
 278:	0f be       	out	0x3f, r0	; 63
 27a:	8d bf       	out	0x3d, r24	; 61
 27c:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <output>
 280:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <output+0x1>
 284:	a0 91 43 01 	lds	r26, 0x0143	; 0x800143 <output+0x2>
 288:	b0 91 44 01 	lds	r27, 0x0144	; 0x800144 <output+0x3>
 28c:	89 2b       	or	r24, r25
 28e:	8a 2b       	or	r24, r26
 290:	8b 2b       	or	r24, r27
 292:	59 f0       	breq	.+22     	; 0x2aa <SMTick3+0x74>
 294:	69 e4       	ldi	r22, 0x49	; 73
 296:	71 e0       	ldi	r23, 0x01	; 1
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	b3 df       	rcall	.-154    	; 0x204 <LCD_DisplayString>
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	08 95       	ret
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	08 95       	ret
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	08 95       	ret

000002b0 <TimerSet>:
 2b0:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 2b4:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 2b8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 2bc:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 2c0:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <_avr_timer_cntcurr>
 2c4:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <_avr_timer_cntcurr+0x1>
 2c8:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <_avr_timer_cntcurr+0x2>
 2cc:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <_avr_timer_cntcurr+0x3>
 2d0:	08 95       	ret

000002d2 <TimerOn>:
 2d2:	89 e0       	ldi	r24, 0x09	; 9
 2d4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 2d8:	8b ee       	ldi	r24, 0xEB	; 235
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2e0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 2e4:	82 e0       	ldi	r24, 0x02	; 2
 2e6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 2ea:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 2ee:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 2f2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2f6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 2fa:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 2fe:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 302:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_avr_timer_cntcurr>
 306:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <_avr_timer_cntcurr+0x1>
 30a:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <_avr_timer_cntcurr+0x2>
 30e:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <_avr_timer_cntcurr+0x3>
 312:	8f b7       	in	r24, 0x3f	; 63
 314:	80 68       	ori	r24, 0x80	; 128
 316:	8f bf       	out	0x3f, r24	; 63
 318:	08 95       	ret

0000031a <__vector_13>:
 31a:	1f 92       	push	r1
 31c:	0f 92       	push	r0
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	0f 92       	push	r0
 322:	11 24       	eor	r1, r1
 324:	8f 93       	push	r24
 326:	9f 93       	push	r25
 328:	af 93       	push	r26
 32a:	bf 93       	push	r27
 32c:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <_avr_timer_cntcurr>
 330:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <_avr_timer_cntcurr+0x1>
 334:	a0 91 3e 01 	lds	r26, 0x013E	; 0x80013e <_avr_timer_cntcurr+0x2>
 338:	b0 91 3f 01 	lds	r27, 0x013F	; 0x80013f <_avr_timer_cntcurr+0x3>
 33c:	01 97       	sbiw	r24, 0x01	; 1
 33e:	a1 09       	sbc	r26, r1
 340:	b1 09       	sbc	r27, r1
 342:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_avr_timer_cntcurr>
 346:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <_avr_timer_cntcurr+0x1>
 34a:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <_avr_timer_cntcurr+0x2>
 34e:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <_avr_timer_cntcurr+0x3>
 352:	89 2b       	or	r24, r25
 354:	8a 2b       	or	r24, r26
 356:	8b 2b       	or	r24, r27
 358:	99 f4       	brne	.+38     	; 0x380 <__vector_13+0x66>
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <TimerFlag>
 360:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 364:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 368:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 36c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 370:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_avr_timer_cntcurr>
 374:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <_avr_timer_cntcurr+0x1>
 378:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <_avr_timer_cntcurr+0x2>
 37c:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <_avr_timer_cntcurr+0x3>
 380:	bf 91       	pop	r27
 382:	af 91       	pop	r26
 384:	9f 91       	pop	r25
 386:	8f 91       	pop	r24
 388:	0f 90       	pop	r0
 38a:	0f be       	out	0x3f, r0	; 63
 38c:	0f 90       	pop	r0
 38e:	1f 90       	pop	r1
 390:	18 95       	reti

00000392 <main>:

// --------END User defined FSMs-----------------------------------------------

// Implement scheduler code from PES.
int main()
{
 392:	cf 93       	push	r28
 394:	df 93       	push	r29
 396:	cd b7       	in	r28, 0x3d	; 61
 398:	de b7       	in	r29, 0x3e	; 62
 39a:	28 97       	sbiw	r28, 0x08	; 8
 39c:	0f b6       	in	r0, 0x3f	; 63
 39e:	f8 94       	cli
 3a0:	de bf       	out	0x3e, r29	; 62
 3a2:	0f be       	out	0x3f, r0	; 63
 3a4:	cd bf       	out	0x3d, r28	; 61
// Set Data Direction Registers
// Buttons PORTA[0-7], set AVR PORTA to pull down logic
DDRA = 0xFF; PORTA = 0x00;
 3a6:	8f ef       	ldi	r24, 0xFF	; 255
 3a8:	81 b9       	out	0x01, r24	; 1
 3aa:	12 b8       	out	0x02, r1	; 2
DDRB = 0x00; PORTB = 0xFF;
 3ac:	14 b8       	out	0x04, r1	; 4
 3ae:	85 b9       	out	0x05, r24	; 5
DDRC = 0xFF; PORTC = 0x00;
 3b0:	87 b9       	out	0x07, r24	; 7
 3b2:	18 b8       	out	0x08, r1	; 8
DDRD = 0xBF; PORTD = 0X40;
 3b4:	8f eb       	ldi	r24, 0xBF	; 191
 3b6:	8a b9       	out	0x0a, r24	; 10
 3b8:	80 e4       	ldi	r24, 0x40	; 64
 3ba:	8b b9       	out	0x0b, r24	; 11
 3bc:	0f 2e       	mov	r0, r31
 3be:	f8 e8       	ldi	r31, 0x88	; 136
 3c0:	df 2e       	mov	r13, r31
 3c2:	f0 2d       	mov	r31, r0
 3c4:	0f 2e       	mov	r0, r31
 3c6:	f3 e1       	ldi	r31, 0x13	; 19
 3c8:	cf 2e       	mov	r12, r31
 3ca:	f0 2d       	mov	r31, r0
 3cc:	b1 2c       	mov	r11, r1
 3ce:	a1 2c       	mov	r10, r1
 3d0:	51 e0       	ldi	r21, 0x01	; 1
 3d2:	40 e0       	ldi	r20, 0x00	; 0
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	20 e0       	ldi	r18, 0x00	; 0
 3d8:	04 c0       	rjmp	.+8      	; 0x3e2 <main+0x50>
	unsigned long int c;
	while(1){
		c = a%b;
		if(c==0){return b;}
		a = b;
b = c;
 3da:	d6 2e       	mov	r13, r22
 3dc:	c7 2e       	mov	r12, r23
 3de:	b8 2e       	mov	r11, r24
 3e0:	a9 2e       	mov	r10, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 3e2:	65 2f       	mov	r22, r21
 3e4:	74 2f       	mov	r23, r20
 3e6:	83 2f       	mov	r24, r19
 3e8:	92 2f       	mov	r25, r18
 3ea:	2d 2d       	mov	r18, r13
 3ec:	3c 2d       	mov	r19, r12
 3ee:	4b 2d       	mov	r20, r11
 3f0:	5a 2d       	mov	r21, r10
 3f2:	ce d0       	rcall	.+412    	; 0x590 <__udivmodsi4>
 3f4:	5d 2d       	mov	r21, r13
 3f6:	4c 2d       	mov	r20, r12
 3f8:	3b 2d       	mov	r19, r11
 3fa:	2a 2d       	mov	r18, r10
		if(c==0){return b;}
 3fc:	61 15       	cp	r22, r1
 3fe:	71 05       	cpc	r23, r1
 400:	81 05       	cpc	r24, r1
 402:	91 05       	cpc	r25, r1
 404:	51 f7       	brne	.-44     	; 0x3da <main+0x48>
 406:	0f 2e       	mov	r0, r31
 408:	f8 e8       	ldi	r31, 0x88	; 136
 40a:	ef 2e       	mov	r14, r31
 40c:	f0 2d       	mov	r31, r0
 40e:	0f 2e       	mov	r0, r31
 410:	f3 e1       	ldi	r31, 0x13	; 19
 412:	ff 2e       	mov	r15, r31
 414:	f0 2d       	mov	r31, r0
 416:	00 e0       	ldi	r16, 0x00	; 0
 418:	10 e0       	ldi	r17, 0x00	; 0
 41a:	04 c0       	rjmp	.+8      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
		a = b;
b = c;
 41c:	e6 2e       	mov	r14, r22
 41e:	f7 2e       	mov	r15, r23
 420:	08 2f       	mov	r16, r24
 422:	19 2f       	mov	r17, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 424:	6d 2d       	mov	r22, r13
 426:	7c 2d       	mov	r23, r12
 428:	8b 2d       	mov	r24, r11
 42a:	9a 2d       	mov	r25, r10
 42c:	2e 2d       	mov	r18, r14
 42e:	3f 2d       	mov	r19, r15
 430:	40 2f       	mov	r20, r16
 432:	51 2f       	mov	r21, r17
 434:	ad d0       	rcall	.+346    	; 0x590 <__udivmodsi4>
 436:	de 2c       	mov	r13, r14
 438:	cf 2c       	mov	r12, r15
 43a:	b0 2e       	mov	r11, r16
 43c:	a1 2e       	mov	r10, r17
		if(c==0){return b;}
 43e:	61 15       	cp	r22, r1
 440:	71 05       	cpc	r23, r1
 442:	81 05       	cpc	r24, r1
 444:	91 05       	cpc	r25, r1
 446:	51 f7       	brne	.-44     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>

//Greatest common divisor for all tasks or smallest time unit for tasks.
unsigned long int GCD = tmpGCD;

//Recalculate GCD periods for scheduler
unsigned long int SMTick1_period = SMTick1_calc/GCD;
 448:	61 e0       	ldi	r22, 0x01	; 1
 44a:	70 e0       	ldi	r23, 0x00	; 0
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	2e 2d       	mov	r18, r14
 452:	3f 2d       	mov	r19, r15
 454:	40 2f       	mov	r20, r16
 456:	51 2f       	mov	r21, r17
 458:	9b d0       	rcall	.+310    	; 0x590 <__udivmodsi4>
 45a:	49 01       	movw	r8, r18
 45c:	5a 01       	movw	r10, r20
unsigned long int SMTick2_period = SMTick2_calc/GCD;
unsigned long int SMTick3_period = SMTick3_calc/GCD;
 45e:	68 e8       	ldi	r22, 0x88	; 136
 460:	73 e1       	ldi	r23, 0x13	; 19
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	2e 2d       	mov	r18, r14
 468:	3f 2d       	mov	r19, r15
 46a:	40 2f       	mov	r20, r16
 46c:	51 2f       	mov	r21, r17
 46e:	90 d0       	rcall	.+288    	; 0x590 <__udivmodsi4>
unsigned long int SMTick4_period = SMTick4_calc/GCD;


//Declare an array of tasks 
static task task1, task2, task3, task4;
task *tasks[] = { &task1, &task2, &task3, &task4 };
 470:	88 e0       	ldi	r24, 0x08	; 8
 472:	e4 e0       	ldi	r30, 0x04	; 4
 474:	f1 e0       	ldi	r31, 0x01	; 1
 476:	de 01       	movw	r26, r28
 478:	11 96       	adiw	r26, 0x01	; 1
 47a:	01 90       	ld	r0, Z+
 47c:	0d 92       	st	X+, r0
 47e:	8a 95       	dec	r24
 480:	e1 f7       	brne	.-8      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

// Task 1
task1.state = -1;//Task initial state.
 482:	e1 e3       	ldi	r30, 0x31	; 49
 484:	f1 e0       	ldi	r31, 0x01	; 1
 486:	6f ef       	ldi	r22, 0xFF	; 255
 488:	60 83       	st	Z, r22
task1.period = SMTick1_period;//Task Period.
 48a:	81 82       	std	Z+1, r8	; 0x01
 48c:	92 82       	std	Z+2, r9	; 0x02
 48e:	a3 82       	std	Z+3, r10	; 0x03
 490:	b4 82       	std	Z+4, r11	; 0x04
task1.elapsedTime = SMTick1_period;//Task current elapsed time.
 492:	85 82       	std	Z+5, r8	; 0x05
 494:	96 82       	std	Z+6, r9	; 0x06
 496:	a7 82       	std	Z+7, r10	; 0x07
 498:	b0 86       	std	Z+8, r11	; 0x08
task1.TickFct = &SMTick1;//Function pointer for the tick.
 49a:	82 eb       	ldi	r24, 0xB2	; 178
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	92 87       	std	Z+10, r25	; 0x0a
 4a0:	81 87       	std	Z+9, r24	; 0x09

// Task 2
task2.state = -1;//Task initial state.
 4a2:	e6 e2       	ldi	r30, 0x26	; 38
 4a4:	f1 e0       	ldi	r31, 0x01	; 1
 4a6:	60 83       	st	Z, r22
task2.period = SMTick2_period;//Task Period.
 4a8:	81 82       	std	Z+1, r8	; 0x01
 4aa:	92 82       	std	Z+2, r9	; 0x02
 4ac:	a3 82       	std	Z+3, r10	; 0x03
 4ae:	b4 82       	std	Z+4, r11	; 0x04
task2.elapsedTime = SMTick2_period;//Task current elapsed time.
 4b0:	85 82       	std	Z+5, r8	; 0x05
 4b2:	96 82       	std	Z+6, r9	; 0x06
 4b4:	a7 82       	std	Z+7, r10	; 0x07
 4b6:	b0 86       	std	Z+8, r11	; 0x08
task2.TickFct = &SMTick2;//Function pointer for the tick.
 4b8:	84 e6       	ldi	r24, 0x64	; 100
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	92 87       	std	Z+10, r25	; 0x0a
 4be:	81 87       	std	Z+9, r24	; 0x09

// Task 3
task3.state = -1;//Task initial state.
 4c0:	eb e1       	ldi	r30, 0x1B	; 27
 4c2:	f1 e0       	ldi	r31, 0x01	; 1
 4c4:	60 83       	st	Z, r22
task3.period = SMTick3_period;//Task Period.
 4c6:	21 83       	std	Z+1, r18	; 0x01
 4c8:	32 83       	std	Z+2, r19	; 0x02
 4ca:	43 83       	std	Z+3, r20	; 0x03
 4cc:	54 83       	std	Z+4, r21	; 0x04
task3.elapsedTime = SMTick3_period; // Task current elasped time.
 4ce:	25 83       	std	Z+5, r18	; 0x05
 4d0:	36 83       	std	Z+6, r19	; 0x06
 4d2:	47 83       	std	Z+7, r20	; 0x07
 4d4:	50 87       	std	Z+8, r21	; 0x08
task3.TickFct = &SMTick3; // Function pointer for the tick.
 4d6:	8b e1       	ldi	r24, 0x1B	; 27
 4d8:	91 e0       	ldi	r25, 0x01	; 1
 4da:	92 87       	std	Z+10, r25	; 0x0a
 4dc:	81 87       	std	Z+9, r24	; 0x09

// Task 4
task4.state = -1;//Task initial state.
 4de:	e0 e1       	ldi	r30, 0x10	; 16
 4e0:	f1 e0       	ldi	r31, 0x01	; 1
 4e2:	60 83       	st	Z, r22
task4.period = SMTick4_period;//Task Period.
 4e4:	21 83       	std	Z+1, r18	; 0x01
 4e6:	32 83       	std	Z+2, r19	; 0x02
 4e8:	43 83       	std	Z+3, r20	; 0x03
 4ea:	54 83       	std	Z+4, r21	; 0x04
task4.elapsedTime = SMTick4_period; // Task current elasped time.
 4ec:	25 83       	std	Z+5, r18	; 0x05
 4ee:	36 83       	std	Z+6, r19	; 0x06
 4f0:	47 83       	std	Z+7, r20	; 0x07
 4f2:	50 87       	std	Z+8, r21	; 0x08
task4.TickFct = &SMTick4; // Function pointer for the tick.
 4f4:	8a ea       	ldi	r24, 0xAA	; 170
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	92 87       	std	Z+10, r25	; 0x0a
 4fa:	81 87       	std	Z+9, r24	; 0x09

// Set the timer and turn it on
TimerSet(GCD);
 4fc:	6e 2d       	mov	r22, r14
 4fe:	7f 2d       	mov	r23, r15
 500:	80 2f       	mov	r24, r16
TimerOn();
 502:	91 2f       	mov	r25, r17
 504:	d5 de       	rcall	.-598    	; 0x2b0 <TimerSet>

unsigned short i; // Scheduler for-loop iterator

LCD_init();
 506:	e5 de       	rcall	.-566    	; 0x2d2 <TimerOn>
 508:	65 de       	rcall	.-822    	; 0x1d4 <LCD_init>
 50a:	7e 01       	movw	r14, r28
 50c:	89 e0       	ldi	r24, 0x09	; 9
 50e:	e8 0e       	add	r14, r24
 510:	f1 1c       	adc	r15, r1
 512:	de 01       	movw	r26, r28
 514:	11 96       	adiw	r26, 0x01	; 1
 516:	6d 01       	movw	r12, r26

while(1) {
	// Scheduler code
	for ( i = 0; i < numTasks; i++ ) {
		// Task is ready to tick
		if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 518:	f6 01       	movw	r30, r12
 51a:	01 91       	ld	r16, Z+
 51c:	11 91       	ld	r17, Z+
 51e:	6f 01       	movw	r12, r30
 520:	d8 01       	movw	r26, r16
 522:	15 96       	adiw	r26, 0x05	; 5
 524:	4d 91       	ld	r20, X+
 526:	5d 91       	ld	r21, X+
 528:	6d 91       	ld	r22, X+
 52a:	7c 91       	ld	r23, X
 52c:	18 97       	sbiw	r26, 0x08	; 8
 52e:	11 96       	adiw	r26, 0x01	; 1
 530:	8d 91       	ld	r24, X+
 532:	9d 91       	ld	r25, X+
 534:	0d 90       	ld	r0, X+
 536:	bc 91       	ld	r27, X
 538:	a0 2d       	mov	r26, r0
 53a:	48 17       	cp	r20, r24
 53c:	59 07       	cpc	r21, r25
 53e:	6a 07       	cpc	r22, r26
 540:	7b 07       	cpc	r23, r27
 542:	81 f4       	brne	.+32     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
			// Setting next state for task
			tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 544:	f8 01       	movw	r30, r16
 546:	80 81       	ld	r24, Z
 548:	01 84       	ldd	r0, Z+9	; 0x09
 54a:	f2 85       	ldd	r31, Z+10	; 0x0a
 54c:	e0 2d       	mov	r30, r0
 54e:	08 2e       	mov	r0, r24
 550:	00 0c       	add	r0, r0
 552:	99 0b       	sbc	r25, r25
 554:	09 95       	icall
 556:	d8 01       	movw	r26, r16
 558:	8c 93       	st	X, r24
			// Reset the elapsed time for next tick.
			tasks[i]->elapsedTime = 0;
 55a:	f8 01       	movw	r30, r16
 55c:	15 82       	std	Z+5, r1	; 0x05
 55e:	16 82       	std	Z+6, r1	; 0x06
 560:	17 82       	std	Z+7, r1	; 0x07
 562:	10 86       	std	Z+8, r1	; 0x08
		}
		tasks[i]->elapsedTime += 1;
 564:	f8 01       	movw	r30, r16
 566:	85 81       	ldd	r24, Z+5	; 0x05
 568:	96 81       	ldd	r25, Z+6	; 0x06
 56a:	a7 81       	ldd	r26, Z+7	; 0x07
 56c:	b0 85       	ldd	r27, Z+8	; 0x08
 56e:	01 96       	adiw	r24, 0x01	; 1
 570:	a1 1d       	adc	r26, r1
 572:	b1 1d       	adc	r27, r1
 574:	85 83       	std	Z+5, r24	; 0x05
 576:	96 83       	std	Z+6, r25	; 0x06
 578:	a7 83       	std	Z+7, r26	; 0x07
 57a:	b0 87       	std	Z+8, r27	; 0x08

LCD_init();

while(1) {
	// Scheduler code
	for ( i = 0; i < numTasks; i++ ) {
 57c:	ce 14       	cp	r12, r14
 57e:	df 04       	cpc	r13, r15
 580:	59 f6       	brne	.-106    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
			// Reset the elapsed time for next tick.
			tasks[i]->elapsedTime = 0;
		}
		tasks[i]->elapsedTime += 1;
	}
	while(!TimerFlag);
 582:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <TimerFlag>
 586:	88 23       	and	r24, r24
 588:	e1 f3       	breq	.-8      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
	TimerFlag = 0;
 58a:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <TimerFlag>
    
    
    
}
 58e:	c1 cf       	rjmp	.-126    	; 0x512 <__LOCK_REGION_LENGTH__+0x112>

00000590 <__udivmodsi4>:
 590:	a1 e2       	ldi	r26, 0x21	; 33
 592:	1a 2e       	mov	r1, r26
 594:	aa 1b       	sub	r26, r26
 596:	bb 1b       	sub	r27, r27
 598:	fd 01       	movw	r30, r26
 59a:	0d c0       	rjmp	.+26     	; 0x5b6 <__udivmodsi4_ep>

0000059c <__udivmodsi4_loop>:
 59c:	aa 1f       	adc	r26, r26
 59e:	bb 1f       	adc	r27, r27
 5a0:	ee 1f       	adc	r30, r30
 5a2:	ff 1f       	adc	r31, r31
 5a4:	a2 17       	cp	r26, r18
 5a6:	b3 07       	cpc	r27, r19
 5a8:	e4 07       	cpc	r30, r20
 5aa:	f5 07       	cpc	r31, r21
 5ac:	20 f0       	brcs	.+8      	; 0x5b6 <__udivmodsi4_ep>
 5ae:	a2 1b       	sub	r26, r18
 5b0:	b3 0b       	sbc	r27, r19
 5b2:	e4 0b       	sbc	r30, r20
 5b4:	f5 0b       	sbc	r31, r21

000005b6 <__udivmodsi4_ep>:
 5b6:	66 1f       	adc	r22, r22
 5b8:	77 1f       	adc	r23, r23
 5ba:	88 1f       	adc	r24, r24
 5bc:	99 1f       	adc	r25, r25
 5be:	1a 94       	dec	r1
 5c0:	69 f7       	brne	.-38     	; 0x59c <__udivmodsi4_loop>
 5c2:	60 95       	com	r22
 5c4:	70 95       	com	r23
 5c6:	80 95       	com	r24
 5c8:	90 95       	com	r25
 5ca:	9b 01       	movw	r18, r22
 5cc:	ac 01       	movw	r20, r24
 5ce:	bd 01       	movw	r22, r26
 5d0:	cf 01       	movw	r24, r30
 5d2:	08 95       	ret

000005d4 <sprintf>:
 5d4:	0f 93       	push	r16
 5d6:	1f 93       	push	r17
 5d8:	cf 93       	push	r28
 5da:	df 93       	push	r29
 5dc:	cd b7       	in	r28, 0x3d	; 61
 5de:	de b7       	in	r29, 0x3e	; 62
 5e0:	2e 97       	sbiw	r28, 0x0e	; 14
 5e2:	0f b6       	in	r0, 0x3f	; 63
 5e4:	f8 94       	cli
 5e6:	de bf       	out	0x3e, r29	; 62
 5e8:	0f be       	out	0x3f, r0	; 63
 5ea:	cd bf       	out	0x3d, r28	; 61
 5ec:	0d 89       	ldd	r16, Y+21	; 0x15
 5ee:	1e 89       	ldd	r17, Y+22	; 0x16
 5f0:	86 e0       	ldi	r24, 0x06	; 6
 5f2:	8c 83       	std	Y+4, r24	; 0x04
 5f4:	1a 83       	std	Y+2, r17	; 0x02
 5f6:	09 83       	std	Y+1, r16	; 0x01
 5f8:	8f ef       	ldi	r24, 0xFF	; 255
 5fa:	9f e7       	ldi	r25, 0x7F	; 127
 5fc:	9e 83       	std	Y+6, r25	; 0x06
 5fe:	8d 83       	std	Y+5, r24	; 0x05
 600:	ae 01       	movw	r20, r28
 602:	47 5e       	subi	r20, 0xE7	; 231
 604:	5f 4f       	sbci	r21, 0xFF	; 255
 606:	6f 89       	ldd	r22, Y+23	; 0x17
 608:	78 8d       	ldd	r23, Y+24	; 0x18
 60a:	ce 01       	movw	r24, r28
 60c:	01 96       	adiw	r24, 0x01	; 1
 60e:	10 d0       	rcall	.+32     	; 0x630 <vfprintf>
 610:	ef 81       	ldd	r30, Y+7	; 0x07
 612:	f8 85       	ldd	r31, Y+8	; 0x08
 614:	e0 0f       	add	r30, r16
 616:	f1 1f       	adc	r31, r17
 618:	10 82       	st	Z, r1
 61a:	2e 96       	adiw	r28, 0x0e	; 14
 61c:	0f b6       	in	r0, 0x3f	; 63
 61e:	f8 94       	cli
 620:	de bf       	out	0x3e, r29	; 62
 622:	0f be       	out	0x3f, r0	; 63
 624:	cd bf       	out	0x3d, r28	; 61
 626:	df 91       	pop	r29
 628:	cf 91       	pop	r28
 62a:	1f 91       	pop	r17
 62c:	0f 91       	pop	r16
 62e:	08 95       	ret

00000630 <vfprintf>:
 630:	2f 92       	push	r2
 632:	3f 92       	push	r3
 634:	4f 92       	push	r4
 636:	5f 92       	push	r5
 638:	6f 92       	push	r6
 63a:	7f 92       	push	r7
 63c:	8f 92       	push	r8
 63e:	9f 92       	push	r9
 640:	af 92       	push	r10
 642:	bf 92       	push	r11
 644:	cf 92       	push	r12
 646:	df 92       	push	r13
 648:	ef 92       	push	r14
 64a:	ff 92       	push	r15
 64c:	0f 93       	push	r16
 64e:	1f 93       	push	r17
 650:	cf 93       	push	r28
 652:	df 93       	push	r29
 654:	cd b7       	in	r28, 0x3d	; 61
 656:	de b7       	in	r29, 0x3e	; 62
 658:	2b 97       	sbiw	r28, 0x0b	; 11
 65a:	0f b6       	in	r0, 0x3f	; 63
 65c:	f8 94       	cli
 65e:	de bf       	out	0x3e, r29	; 62
 660:	0f be       	out	0x3f, r0	; 63
 662:	cd bf       	out	0x3d, r28	; 61
 664:	6c 01       	movw	r12, r24
 666:	7b 01       	movw	r14, r22
 668:	8a 01       	movw	r16, r20
 66a:	fc 01       	movw	r30, r24
 66c:	17 82       	std	Z+7, r1	; 0x07
 66e:	16 82       	std	Z+6, r1	; 0x06
 670:	83 81       	ldd	r24, Z+3	; 0x03
 672:	81 ff       	sbrs	r24, 1
 674:	bf c1       	rjmp	.+894    	; 0x9f4 <vfprintf+0x3c4>
 676:	ce 01       	movw	r24, r28
 678:	01 96       	adiw	r24, 0x01	; 1
 67a:	3c 01       	movw	r6, r24
 67c:	f6 01       	movw	r30, r12
 67e:	93 81       	ldd	r25, Z+3	; 0x03
 680:	f7 01       	movw	r30, r14
 682:	93 fd       	sbrc	r25, 3
 684:	85 91       	lpm	r24, Z+
 686:	93 ff       	sbrs	r25, 3
 688:	81 91       	ld	r24, Z+
 68a:	7f 01       	movw	r14, r30
 68c:	88 23       	and	r24, r24
 68e:	09 f4       	brne	.+2      	; 0x692 <vfprintf+0x62>
 690:	ad c1       	rjmp	.+858    	; 0x9ec <vfprintf+0x3bc>
 692:	85 32       	cpi	r24, 0x25	; 37
 694:	39 f4       	brne	.+14     	; 0x6a4 <vfprintf+0x74>
 696:	93 fd       	sbrc	r25, 3
 698:	85 91       	lpm	r24, Z+
 69a:	93 ff       	sbrs	r25, 3
 69c:	81 91       	ld	r24, Z+
 69e:	7f 01       	movw	r14, r30
 6a0:	85 32       	cpi	r24, 0x25	; 37
 6a2:	21 f4       	brne	.+8      	; 0x6ac <vfprintf+0x7c>
 6a4:	b6 01       	movw	r22, r12
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	d6 d1       	rcall	.+940    	; 0xa56 <fputc>
 6aa:	e8 cf       	rjmp	.-48     	; 0x67c <vfprintf+0x4c>
 6ac:	91 2c       	mov	r9, r1
 6ae:	21 2c       	mov	r2, r1
 6b0:	31 2c       	mov	r3, r1
 6b2:	ff e1       	ldi	r31, 0x1F	; 31
 6b4:	f3 15       	cp	r31, r3
 6b6:	d8 f0       	brcs	.+54     	; 0x6ee <vfprintf+0xbe>
 6b8:	8b 32       	cpi	r24, 0x2B	; 43
 6ba:	79 f0       	breq	.+30     	; 0x6da <vfprintf+0xaa>
 6bc:	38 f4       	brcc	.+14     	; 0x6cc <vfprintf+0x9c>
 6be:	80 32       	cpi	r24, 0x20	; 32
 6c0:	79 f0       	breq	.+30     	; 0x6e0 <vfprintf+0xb0>
 6c2:	83 32       	cpi	r24, 0x23	; 35
 6c4:	a1 f4       	brne	.+40     	; 0x6ee <vfprintf+0xbe>
 6c6:	23 2d       	mov	r18, r3
 6c8:	20 61       	ori	r18, 0x10	; 16
 6ca:	1d c0       	rjmp	.+58     	; 0x706 <vfprintf+0xd6>
 6cc:	8d 32       	cpi	r24, 0x2D	; 45
 6ce:	61 f0       	breq	.+24     	; 0x6e8 <vfprintf+0xb8>
 6d0:	80 33       	cpi	r24, 0x30	; 48
 6d2:	69 f4       	brne	.+26     	; 0x6ee <vfprintf+0xbe>
 6d4:	23 2d       	mov	r18, r3
 6d6:	21 60       	ori	r18, 0x01	; 1
 6d8:	16 c0       	rjmp	.+44     	; 0x706 <vfprintf+0xd6>
 6da:	83 2d       	mov	r24, r3
 6dc:	82 60       	ori	r24, 0x02	; 2
 6de:	38 2e       	mov	r3, r24
 6e0:	e3 2d       	mov	r30, r3
 6e2:	e4 60       	ori	r30, 0x04	; 4
 6e4:	3e 2e       	mov	r3, r30
 6e6:	2a c0       	rjmp	.+84     	; 0x73c <vfprintf+0x10c>
 6e8:	f3 2d       	mov	r31, r3
 6ea:	f8 60       	ori	r31, 0x08	; 8
 6ec:	1d c0       	rjmp	.+58     	; 0x728 <vfprintf+0xf8>
 6ee:	37 fc       	sbrc	r3, 7
 6f0:	2d c0       	rjmp	.+90     	; 0x74c <vfprintf+0x11c>
 6f2:	20 ed       	ldi	r18, 0xD0	; 208
 6f4:	28 0f       	add	r18, r24
 6f6:	2a 30       	cpi	r18, 0x0A	; 10
 6f8:	40 f0       	brcs	.+16     	; 0x70a <vfprintf+0xda>
 6fa:	8e 32       	cpi	r24, 0x2E	; 46
 6fc:	b9 f4       	brne	.+46     	; 0x72c <vfprintf+0xfc>
 6fe:	36 fc       	sbrc	r3, 6
 700:	75 c1       	rjmp	.+746    	; 0x9ec <vfprintf+0x3bc>
 702:	23 2d       	mov	r18, r3
 704:	20 64       	ori	r18, 0x40	; 64
 706:	32 2e       	mov	r3, r18
 708:	19 c0       	rjmp	.+50     	; 0x73c <vfprintf+0x10c>
 70a:	36 fe       	sbrs	r3, 6
 70c:	06 c0       	rjmp	.+12     	; 0x71a <vfprintf+0xea>
 70e:	8a e0       	ldi	r24, 0x0A	; 10
 710:	98 9e       	mul	r9, r24
 712:	20 0d       	add	r18, r0
 714:	11 24       	eor	r1, r1
 716:	92 2e       	mov	r9, r18
 718:	11 c0       	rjmp	.+34     	; 0x73c <vfprintf+0x10c>
 71a:	ea e0       	ldi	r30, 0x0A	; 10
 71c:	2e 9e       	mul	r2, r30
 71e:	20 0d       	add	r18, r0
 720:	11 24       	eor	r1, r1
 722:	22 2e       	mov	r2, r18
 724:	f3 2d       	mov	r31, r3
 726:	f0 62       	ori	r31, 0x20	; 32
 728:	3f 2e       	mov	r3, r31
 72a:	08 c0       	rjmp	.+16     	; 0x73c <vfprintf+0x10c>
 72c:	8c 36       	cpi	r24, 0x6C	; 108
 72e:	21 f4       	brne	.+8      	; 0x738 <vfprintf+0x108>
 730:	83 2d       	mov	r24, r3
 732:	80 68       	ori	r24, 0x80	; 128
 734:	38 2e       	mov	r3, r24
 736:	02 c0       	rjmp	.+4      	; 0x73c <vfprintf+0x10c>
 738:	88 36       	cpi	r24, 0x68	; 104
 73a:	41 f4       	brne	.+16     	; 0x74c <vfprintf+0x11c>
 73c:	f7 01       	movw	r30, r14
 73e:	93 fd       	sbrc	r25, 3
 740:	85 91       	lpm	r24, Z+
 742:	93 ff       	sbrs	r25, 3
 744:	81 91       	ld	r24, Z+
 746:	7f 01       	movw	r14, r30
 748:	81 11       	cpse	r24, r1
 74a:	b3 cf       	rjmp	.-154    	; 0x6b2 <vfprintf+0x82>
 74c:	98 2f       	mov	r25, r24
 74e:	9f 7d       	andi	r25, 0xDF	; 223
 750:	95 54       	subi	r25, 0x45	; 69
 752:	93 30       	cpi	r25, 0x03	; 3
 754:	28 f4       	brcc	.+10     	; 0x760 <vfprintf+0x130>
 756:	0c 5f       	subi	r16, 0xFC	; 252
 758:	1f 4f       	sbci	r17, 0xFF	; 255
 75a:	9f e3       	ldi	r25, 0x3F	; 63
 75c:	99 83       	std	Y+1, r25	; 0x01
 75e:	0d c0       	rjmp	.+26     	; 0x77a <vfprintf+0x14a>
 760:	83 36       	cpi	r24, 0x63	; 99
 762:	31 f0       	breq	.+12     	; 0x770 <vfprintf+0x140>
 764:	83 37       	cpi	r24, 0x73	; 115
 766:	71 f0       	breq	.+28     	; 0x784 <vfprintf+0x154>
 768:	83 35       	cpi	r24, 0x53	; 83
 76a:	09 f0       	breq	.+2      	; 0x76e <vfprintf+0x13e>
 76c:	55 c0       	rjmp	.+170    	; 0x818 <vfprintf+0x1e8>
 76e:	20 c0       	rjmp	.+64     	; 0x7b0 <vfprintf+0x180>
 770:	f8 01       	movw	r30, r16
 772:	80 81       	ld	r24, Z
 774:	89 83       	std	Y+1, r24	; 0x01
 776:	0e 5f       	subi	r16, 0xFE	; 254
 778:	1f 4f       	sbci	r17, 0xFF	; 255
 77a:	88 24       	eor	r8, r8
 77c:	83 94       	inc	r8
 77e:	91 2c       	mov	r9, r1
 780:	53 01       	movw	r10, r6
 782:	12 c0       	rjmp	.+36     	; 0x7a8 <vfprintf+0x178>
 784:	28 01       	movw	r4, r16
 786:	f2 e0       	ldi	r31, 0x02	; 2
 788:	4f 0e       	add	r4, r31
 78a:	51 1c       	adc	r5, r1
 78c:	f8 01       	movw	r30, r16
 78e:	a0 80       	ld	r10, Z
 790:	b1 80       	ldd	r11, Z+1	; 0x01
 792:	36 fe       	sbrs	r3, 6
 794:	03 c0       	rjmp	.+6      	; 0x79c <vfprintf+0x16c>
 796:	69 2d       	mov	r22, r9
 798:	70 e0       	ldi	r23, 0x00	; 0
 79a:	02 c0       	rjmp	.+4      	; 0x7a0 <vfprintf+0x170>
 79c:	6f ef       	ldi	r22, 0xFF	; 255
 79e:	7f ef       	ldi	r23, 0xFF	; 255
 7a0:	c5 01       	movw	r24, r10
 7a2:	4e d1       	rcall	.+668    	; 0xa40 <strnlen>
 7a4:	4c 01       	movw	r8, r24
 7a6:	82 01       	movw	r16, r4
 7a8:	f3 2d       	mov	r31, r3
 7aa:	ff 77       	andi	r31, 0x7F	; 127
 7ac:	3f 2e       	mov	r3, r31
 7ae:	15 c0       	rjmp	.+42     	; 0x7da <vfprintf+0x1aa>
 7b0:	28 01       	movw	r4, r16
 7b2:	22 e0       	ldi	r18, 0x02	; 2
 7b4:	42 0e       	add	r4, r18
 7b6:	51 1c       	adc	r5, r1
 7b8:	f8 01       	movw	r30, r16
 7ba:	a0 80       	ld	r10, Z
 7bc:	b1 80       	ldd	r11, Z+1	; 0x01
 7be:	36 fe       	sbrs	r3, 6
 7c0:	03 c0       	rjmp	.+6      	; 0x7c8 <vfprintf+0x198>
 7c2:	69 2d       	mov	r22, r9
 7c4:	70 e0       	ldi	r23, 0x00	; 0
 7c6:	02 c0       	rjmp	.+4      	; 0x7cc <vfprintf+0x19c>
 7c8:	6f ef       	ldi	r22, 0xFF	; 255
 7ca:	7f ef       	ldi	r23, 0xFF	; 255
 7cc:	c5 01       	movw	r24, r10
 7ce:	2d d1       	rcall	.+602    	; 0xa2a <strnlen_P>
 7d0:	4c 01       	movw	r8, r24
 7d2:	f3 2d       	mov	r31, r3
 7d4:	f0 68       	ori	r31, 0x80	; 128
 7d6:	3f 2e       	mov	r3, r31
 7d8:	82 01       	movw	r16, r4
 7da:	33 fc       	sbrc	r3, 3
 7dc:	19 c0       	rjmp	.+50     	; 0x810 <vfprintf+0x1e0>
 7de:	82 2d       	mov	r24, r2
 7e0:	90 e0       	ldi	r25, 0x00	; 0
 7e2:	88 16       	cp	r8, r24
 7e4:	99 06       	cpc	r9, r25
 7e6:	a0 f4       	brcc	.+40     	; 0x810 <vfprintf+0x1e0>
 7e8:	b6 01       	movw	r22, r12
 7ea:	80 e2       	ldi	r24, 0x20	; 32
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	33 d1       	rcall	.+614    	; 0xa56 <fputc>
 7f0:	2a 94       	dec	r2
 7f2:	f5 cf       	rjmp	.-22     	; 0x7de <vfprintf+0x1ae>
 7f4:	f5 01       	movw	r30, r10
 7f6:	37 fc       	sbrc	r3, 7
 7f8:	85 91       	lpm	r24, Z+
 7fa:	37 fe       	sbrs	r3, 7
 7fc:	81 91       	ld	r24, Z+
 7fe:	5f 01       	movw	r10, r30
 800:	b6 01       	movw	r22, r12
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	28 d1       	rcall	.+592    	; 0xa56 <fputc>
 806:	21 10       	cpse	r2, r1
 808:	2a 94       	dec	r2
 80a:	21 e0       	ldi	r18, 0x01	; 1
 80c:	82 1a       	sub	r8, r18
 80e:	91 08       	sbc	r9, r1
 810:	81 14       	cp	r8, r1
 812:	91 04       	cpc	r9, r1
 814:	79 f7       	brne	.-34     	; 0x7f4 <vfprintf+0x1c4>
 816:	e1 c0       	rjmp	.+450    	; 0x9da <vfprintf+0x3aa>
 818:	84 36       	cpi	r24, 0x64	; 100
 81a:	11 f0       	breq	.+4      	; 0x820 <vfprintf+0x1f0>
 81c:	89 36       	cpi	r24, 0x69	; 105
 81e:	39 f5       	brne	.+78     	; 0x86e <vfprintf+0x23e>
 820:	f8 01       	movw	r30, r16
 822:	37 fe       	sbrs	r3, 7
 824:	07 c0       	rjmp	.+14     	; 0x834 <vfprintf+0x204>
 826:	60 81       	ld	r22, Z
 828:	71 81       	ldd	r23, Z+1	; 0x01
 82a:	82 81       	ldd	r24, Z+2	; 0x02
 82c:	93 81       	ldd	r25, Z+3	; 0x03
 82e:	0c 5f       	subi	r16, 0xFC	; 252
 830:	1f 4f       	sbci	r17, 0xFF	; 255
 832:	08 c0       	rjmp	.+16     	; 0x844 <vfprintf+0x214>
 834:	60 81       	ld	r22, Z
 836:	71 81       	ldd	r23, Z+1	; 0x01
 838:	07 2e       	mov	r0, r23
 83a:	00 0c       	add	r0, r0
 83c:	88 0b       	sbc	r24, r24
 83e:	99 0b       	sbc	r25, r25
 840:	0e 5f       	subi	r16, 0xFE	; 254
 842:	1f 4f       	sbci	r17, 0xFF	; 255
 844:	f3 2d       	mov	r31, r3
 846:	ff 76       	andi	r31, 0x6F	; 111
 848:	3f 2e       	mov	r3, r31
 84a:	97 ff       	sbrs	r25, 7
 84c:	09 c0       	rjmp	.+18     	; 0x860 <vfprintf+0x230>
 84e:	90 95       	com	r25
 850:	80 95       	com	r24
 852:	70 95       	com	r23
 854:	61 95       	neg	r22
 856:	7f 4f       	sbci	r23, 0xFF	; 255
 858:	8f 4f       	sbci	r24, 0xFF	; 255
 85a:	9f 4f       	sbci	r25, 0xFF	; 255
 85c:	f0 68       	ori	r31, 0x80	; 128
 85e:	3f 2e       	mov	r3, r31
 860:	2a e0       	ldi	r18, 0x0A	; 10
 862:	30 e0       	ldi	r19, 0x00	; 0
 864:	a3 01       	movw	r20, r6
 866:	33 d1       	rcall	.+614    	; 0xace <__ultoa_invert>
 868:	88 2e       	mov	r8, r24
 86a:	86 18       	sub	r8, r6
 86c:	44 c0       	rjmp	.+136    	; 0x8f6 <vfprintf+0x2c6>
 86e:	85 37       	cpi	r24, 0x75	; 117
 870:	31 f4       	brne	.+12     	; 0x87e <vfprintf+0x24e>
 872:	23 2d       	mov	r18, r3
 874:	2f 7e       	andi	r18, 0xEF	; 239
 876:	b2 2e       	mov	r11, r18
 878:	2a e0       	ldi	r18, 0x0A	; 10
 87a:	30 e0       	ldi	r19, 0x00	; 0
 87c:	25 c0       	rjmp	.+74     	; 0x8c8 <vfprintf+0x298>
 87e:	93 2d       	mov	r25, r3
 880:	99 7f       	andi	r25, 0xF9	; 249
 882:	b9 2e       	mov	r11, r25
 884:	8f 36       	cpi	r24, 0x6F	; 111
 886:	c1 f0       	breq	.+48     	; 0x8b8 <vfprintf+0x288>
 888:	18 f4       	brcc	.+6      	; 0x890 <vfprintf+0x260>
 88a:	88 35       	cpi	r24, 0x58	; 88
 88c:	79 f0       	breq	.+30     	; 0x8ac <vfprintf+0x27c>
 88e:	ae c0       	rjmp	.+348    	; 0x9ec <vfprintf+0x3bc>
 890:	80 37       	cpi	r24, 0x70	; 112
 892:	19 f0       	breq	.+6      	; 0x89a <vfprintf+0x26a>
 894:	88 37       	cpi	r24, 0x78	; 120
 896:	21 f0       	breq	.+8      	; 0x8a0 <vfprintf+0x270>
 898:	a9 c0       	rjmp	.+338    	; 0x9ec <vfprintf+0x3bc>
 89a:	e9 2f       	mov	r30, r25
 89c:	e0 61       	ori	r30, 0x10	; 16
 89e:	be 2e       	mov	r11, r30
 8a0:	b4 fe       	sbrs	r11, 4
 8a2:	0d c0       	rjmp	.+26     	; 0x8be <vfprintf+0x28e>
 8a4:	fb 2d       	mov	r31, r11
 8a6:	f4 60       	ori	r31, 0x04	; 4
 8a8:	bf 2e       	mov	r11, r31
 8aa:	09 c0       	rjmp	.+18     	; 0x8be <vfprintf+0x28e>
 8ac:	34 fe       	sbrs	r3, 4
 8ae:	0a c0       	rjmp	.+20     	; 0x8c4 <vfprintf+0x294>
 8b0:	29 2f       	mov	r18, r25
 8b2:	26 60       	ori	r18, 0x06	; 6
 8b4:	b2 2e       	mov	r11, r18
 8b6:	06 c0       	rjmp	.+12     	; 0x8c4 <vfprintf+0x294>
 8b8:	28 e0       	ldi	r18, 0x08	; 8
 8ba:	30 e0       	ldi	r19, 0x00	; 0
 8bc:	05 c0       	rjmp	.+10     	; 0x8c8 <vfprintf+0x298>
 8be:	20 e1       	ldi	r18, 0x10	; 16
 8c0:	30 e0       	ldi	r19, 0x00	; 0
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <vfprintf+0x298>
 8c4:	20 e1       	ldi	r18, 0x10	; 16
 8c6:	32 e0       	ldi	r19, 0x02	; 2
 8c8:	f8 01       	movw	r30, r16
 8ca:	b7 fe       	sbrs	r11, 7
 8cc:	07 c0       	rjmp	.+14     	; 0x8dc <vfprintf+0x2ac>
 8ce:	60 81       	ld	r22, Z
 8d0:	71 81       	ldd	r23, Z+1	; 0x01
 8d2:	82 81       	ldd	r24, Z+2	; 0x02
 8d4:	93 81       	ldd	r25, Z+3	; 0x03
 8d6:	0c 5f       	subi	r16, 0xFC	; 252
 8d8:	1f 4f       	sbci	r17, 0xFF	; 255
 8da:	06 c0       	rjmp	.+12     	; 0x8e8 <vfprintf+0x2b8>
 8dc:	60 81       	ld	r22, Z
 8de:	71 81       	ldd	r23, Z+1	; 0x01
 8e0:	80 e0       	ldi	r24, 0x00	; 0
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	0e 5f       	subi	r16, 0xFE	; 254
 8e6:	1f 4f       	sbci	r17, 0xFF	; 255
 8e8:	a3 01       	movw	r20, r6
 8ea:	f1 d0       	rcall	.+482    	; 0xace <__ultoa_invert>
 8ec:	88 2e       	mov	r8, r24
 8ee:	86 18       	sub	r8, r6
 8f0:	fb 2d       	mov	r31, r11
 8f2:	ff 77       	andi	r31, 0x7F	; 127
 8f4:	3f 2e       	mov	r3, r31
 8f6:	36 fe       	sbrs	r3, 6
 8f8:	0d c0       	rjmp	.+26     	; 0x914 <vfprintf+0x2e4>
 8fa:	23 2d       	mov	r18, r3
 8fc:	2e 7f       	andi	r18, 0xFE	; 254
 8fe:	a2 2e       	mov	r10, r18
 900:	89 14       	cp	r8, r9
 902:	58 f4       	brcc	.+22     	; 0x91a <vfprintf+0x2ea>
 904:	34 fe       	sbrs	r3, 4
 906:	0b c0       	rjmp	.+22     	; 0x91e <vfprintf+0x2ee>
 908:	32 fc       	sbrc	r3, 2
 90a:	09 c0       	rjmp	.+18     	; 0x91e <vfprintf+0x2ee>
 90c:	83 2d       	mov	r24, r3
 90e:	8e 7e       	andi	r24, 0xEE	; 238
 910:	a8 2e       	mov	r10, r24
 912:	05 c0       	rjmp	.+10     	; 0x91e <vfprintf+0x2ee>
 914:	b8 2c       	mov	r11, r8
 916:	a3 2c       	mov	r10, r3
 918:	03 c0       	rjmp	.+6      	; 0x920 <vfprintf+0x2f0>
 91a:	b8 2c       	mov	r11, r8
 91c:	01 c0       	rjmp	.+2      	; 0x920 <vfprintf+0x2f0>
 91e:	b9 2c       	mov	r11, r9
 920:	a4 fe       	sbrs	r10, 4
 922:	0f c0       	rjmp	.+30     	; 0x942 <vfprintf+0x312>
 924:	fe 01       	movw	r30, r28
 926:	e8 0d       	add	r30, r8
 928:	f1 1d       	adc	r31, r1
 92a:	80 81       	ld	r24, Z
 92c:	80 33       	cpi	r24, 0x30	; 48
 92e:	21 f4       	brne	.+8      	; 0x938 <vfprintf+0x308>
 930:	9a 2d       	mov	r25, r10
 932:	99 7e       	andi	r25, 0xE9	; 233
 934:	a9 2e       	mov	r10, r25
 936:	09 c0       	rjmp	.+18     	; 0x94a <vfprintf+0x31a>
 938:	a2 fe       	sbrs	r10, 2
 93a:	06 c0       	rjmp	.+12     	; 0x948 <vfprintf+0x318>
 93c:	b3 94       	inc	r11
 93e:	b3 94       	inc	r11
 940:	04 c0       	rjmp	.+8      	; 0x94a <vfprintf+0x31a>
 942:	8a 2d       	mov	r24, r10
 944:	86 78       	andi	r24, 0x86	; 134
 946:	09 f0       	breq	.+2      	; 0x94a <vfprintf+0x31a>
 948:	b3 94       	inc	r11
 94a:	a3 fc       	sbrc	r10, 3
 94c:	10 c0       	rjmp	.+32     	; 0x96e <vfprintf+0x33e>
 94e:	a0 fe       	sbrs	r10, 0
 950:	06 c0       	rjmp	.+12     	; 0x95e <vfprintf+0x32e>
 952:	b2 14       	cp	r11, r2
 954:	80 f4       	brcc	.+32     	; 0x976 <vfprintf+0x346>
 956:	28 0c       	add	r2, r8
 958:	92 2c       	mov	r9, r2
 95a:	9b 18       	sub	r9, r11
 95c:	0d c0       	rjmp	.+26     	; 0x978 <vfprintf+0x348>
 95e:	b2 14       	cp	r11, r2
 960:	58 f4       	brcc	.+22     	; 0x978 <vfprintf+0x348>
 962:	b6 01       	movw	r22, r12
 964:	80 e2       	ldi	r24, 0x20	; 32
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	76 d0       	rcall	.+236    	; 0xa56 <fputc>
 96a:	b3 94       	inc	r11
 96c:	f8 cf       	rjmp	.-16     	; 0x95e <vfprintf+0x32e>
 96e:	b2 14       	cp	r11, r2
 970:	18 f4       	brcc	.+6      	; 0x978 <vfprintf+0x348>
 972:	2b 18       	sub	r2, r11
 974:	02 c0       	rjmp	.+4      	; 0x97a <vfprintf+0x34a>
 976:	98 2c       	mov	r9, r8
 978:	21 2c       	mov	r2, r1
 97a:	a4 fe       	sbrs	r10, 4
 97c:	0f c0       	rjmp	.+30     	; 0x99c <vfprintf+0x36c>
 97e:	b6 01       	movw	r22, r12
 980:	80 e3       	ldi	r24, 0x30	; 48
 982:	90 e0       	ldi	r25, 0x00	; 0
 984:	68 d0       	rcall	.+208    	; 0xa56 <fputc>
 986:	a2 fe       	sbrs	r10, 2
 988:	16 c0       	rjmp	.+44     	; 0x9b6 <vfprintf+0x386>
 98a:	a1 fc       	sbrc	r10, 1
 98c:	03 c0       	rjmp	.+6      	; 0x994 <vfprintf+0x364>
 98e:	88 e7       	ldi	r24, 0x78	; 120
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	02 c0       	rjmp	.+4      	; 0x998 <vfprintf+0x368>
 994:	88 e5       	ldi	r24, 0x58	; 88
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	b6 01       	movw	r22, r12
 99a:	0c c0       	rjmp	.+24     	; 0x9b4 <vfprintf+0x384>
 99c:	8a 2d       	mov	r24, r10
 99e:	86 78       	andi	r24, 0x86	; 134
 9a0:	51 f0       	breq	.+20     	; 0x9b6 <vfprintf+0x386>
 9a2:	a1 fe       	sbrs	r10, 1
 9a4:	02 c0       	rjmp	.+4      	; 0x9aa <vfprintf+0x37a>
 9a6:	8b e2       	ldi	r24, 0x2B	; 43
 9a8:	01 c0       	rjmp	.+2      	; 0x9ac <vfprintf+0x37c>
 9aa:	80 e2       	ldi	r24, 0x20	; 32
 9ac:	a7 fc       	sbrc	r10, 7
 9ae:	8d e2       	ldi	r24, 0x2D	; 45
 9b0:	b6 01       	movw	r22, r12
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	50 d0       	rcall	.+160    	; 0xa56 <fputc>
 9b6:	89 14       	cp	r8, r9
 9b8:	30 f4       	brcc	.+12     	; 0x9c6 <vfprintf+0x396>
 9ba:	b6 01       	movw	r22, r12
 9bc:	80 e3       	ldi	r24, 0x30	; 48
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	4a d0       	rcall	.+148    	; 0xa56 <fputc>
 9c2:	9a 94       	dec	r9
 9c4:	f8 cf       	rjmp	.-16     	; 0x9b6 <vfprintf+0x386>
 9c6:	8a 94       	dec	r8
 9c8:	f3 01       	movw	r30, r6
 9ca:	e8 0d       	add	r30, r8
 9cc:	f1 1d       	adc	r31, r1
 9ce:	80 81       	ld	r24, Z
 9d0:	b6 01       	movw	r22, r12
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	40 d0       	rcall	.+128    	; 0xa56 <fputc>
 9d6:	81 10       	cpse	r8, r1
 9d8:	f6 cf       	rjmp	.-20     	; 0x9c6 <vfprintf+0x396>
 9da:	22 20       	and	r2, r2
 9dc:	09 f4       	brne	.+2      	; 0x9e0 <vfprintf+0x3b0>
 9de:	4e ce       	rjmp	.-868    	; 0x67c <vfprintf+0x4c>
 9e0:	b6 01       	movw	r22, r12
 9e2:	80 e2       	ldi	r24, 0x20	; 32
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	37 d0       	rcall	.+110    	; 0xa56 <fputc>
 9e8:	2a 94       	dec	r2
 9ea:	f7 cf       	rjmp	.-18     	; 0x9da <vfprintf+0x3aa>
 9ec:	f6 01       	movw	r30, r12
 9ee:	86 81       	ldd	r24, Z+6	; 0x06
 9f0:	97 81       	ldd	r25, Z+7	; 0x07
 9f2:	02 c0       	rjmp	.+4      	; 0x9f8 <vfprintf+0x3c8>
 9f4:	8f ef       	ldi	r24, 0xFF	; 255
 9f6:	9f ef       	ldi	r25, 0xFF	; 255
 9f8:	2b 96       	adiw	r28, 0x0b	; 11
 9fa:	0f b6       	in	r0, 0x3f	; 63
 9fc:	f8 94       	cli
 9fe:	de bf       	out	0x3e, r29	; 62
 a00:	0f be       	out	0x3f, r0	; 63
 a02:	cd bf       	out	0x3d, r28	; 61
 a04:	df 91       	pop	r29
 a06:	cf 91       	pop	r28
 a08:	1f 91       	pop	r17
 a0a:	0f 91       	pop	r16
 a0c:	ff 90       	pop	r15
 a0e:	ef 90       	pop	r14
 a10:	df 90       	pop	r13
 a12:	cf 90       	pop	r12
 a14:	bf 90       	pop	r11
 a16:	af 90       	pop	r10
 a18:	9f 90       	pop	r9
 a1a:	8f 90       	pop	r8
 a1c:	7f 90       	pop	r7
 a1e:	6f 90       	pop	r6
 a20:	5f 90       	pop	r5
 a22:	4f 90       	pop	r4
 a24:	3f 90       	pop	r3
 a26:	2f 90       	pop	r2
 a28:	08 95       	ret

00000a2a <strnlen_P>:
 a2a:	fc 01       	movw	r30, r24
 a2c:	05 90       	lpm	r0, Z+
 a2e:	61 50       	subi	r22, 0x01	; 1
 a30:	70 40       	sbci	r23, 0x00	; 0
 a32:	01 10       	cpse	r0, r1
 a34:	d8 f7       	brcc	.-10     	; 0xa2c <strnlen_P+0x2>
 a36:	80 95       	com	r24
 a38:	90 95       	com	r25
 a3a:	8e 0f       	add	r24, r30
 a3c:	9f 1f       	adc	r25, r31
 a3e:	08 95       	ret

00000a40 <strnlen>:
 a40:	fc 01       	movw	r30, r24
 a42:	61 50       	subi	r22, 0x01	; 1
 a44:	70 40       	sbci	r23, 0x00	; 0
 a46:	01 90       	ld	r0, Z+
 a48:	01 10       	cpse	r0, r1
 a4a:	d8 f7       	brcc	.-10     	; 0xa42 <strnlen+0x2>
 a4c:	80 95       	com	r24
 a4e:	90 95       	com	r25
 a50:	8e 0f       	add	r24, r30
 a52:	9f 1f       	adc	r25, r31
 a54:	08 95       	ret

00000a56 <fputc>:
 a56:	0f 93       	push	r16
 a58:	1f 93       	push	r17
 a5a:	cf 93       	push	r28
 a5c:	df 93       	push	r29
 a5e:	fb 01       	movw	r30, r22
 a60:	23 81       	ldd	r18, Z+3	; 0x03
 a62:	21 fd       	sbrc	r18, 1
 a64:	03 c0       	rjmp	.+6      	; 0xa6c <fputc+0x16>
 a66:	8f ef       	ldi	r24, 0xFF	; 255
 a68:	9f ef       	ldi	r25, 0xFF	; 255
 a6a:	2c c0       	rjmp	.+88     	; 0xac4 <fputc+0x6e>
 a6c:	22 ff       	sbrs	r18, 2
 a6e:	16 c0       	rjmp	.+44     	; 0xa9c <fputc+0x46>
 a70:	46 81       	ldd	r20, Z+6	; 0x06
 a72:	57 81       	ldd	r21, Z+7	; 0x07
 a74:	24 81       	ldd	r18, Z+4	; 0x04
 a76:	35 81       	ldd	r19, Z+5	; 0x05
 a78:	42 17       	cp	r20, r18
 a7a:	53 07       	cpc	r21, r19
 a7c:	44 f4       	brge	.+16     	; 0xa8e <fputc+0x38>
 a7e:	a0 81       	ld	r26, Z
 a80:	b1 81       	ldd	r27, Z+1	; 0x01
 a82:	9d 01       	movw	r18, r26
 a84:	2f 5f       	subi	r18, 0xFF	; 255
 a86:	3f 4f       	sbci	r19, 0xFF	; 255
 a88:	31 83       	std	Z+1, r19	; 0x01
 a8a:	20 83       	st	Z, r18
 a8c:	8c 93       	st	X, r24
 a8e:	26 81       	ldd	r18, Z+6	; 0x06
 a90:	37 81       	ldd	r19, Z+7	; 0x07
 a92:	2f 5f       	subi	r18, 0xFF	; 255
 a94:	3f 4f       	sbci	r19, 0xFF	; 255
 a96:	37 83       	std	Z+7, r19	; 0x07
 a98:	26 83       	std	Z+6, r18	; 0x06
 a9a:	14 c0       	rjmp	.+40     	; 0xac4 <fputc+0x6e>
 a9c:	8b 01       	movw	r16, r22
 a9e:	ec 01       	movw	r28, r24
 aa0:	fb 01       	movw	r30, r22
 aa2:	00 84       	ldd	r0, Z+8	; 0x08
 aa4:	f1 85       	ldd	r31, Z+9	; 0x09
 aa6:	e0 2d       	mov	r30, r0
 aa8:	09 95       	icall
 aaa:	89 2b       	or	r24, r25
 aac:	e1 f6       	brne	.-72     	; 0xa66 <fputc+0x10>
 aae:	d8 01       	movw	r26, r16
 ab0:	16 96       	adiw	r26, 0x06	; 6
 ab2:	8d 91       	ld	r24, X+
 ab4:	9c 91       	ld	r25, X
 ab6:	17 97       	sbiw	r26, 0x07	; 7
 ab8:	01 96       	adiw	r24, 0x01	; 1
 aba:	17 96       	adiw	r26, 0x07	; 7
 abc:	9c 93       	st	X, r25
 abe:	8e 93       	st	-X, r24
 ac0:	16 97       	sbiw	r26, 0x06	; 6
 ac2:	ce 01       	movw	r24, r28
 ac4:	df 91       	pop	r29
 ac6:	cf 91       	pop	r28
 ac8:	1f 91       	pop	r17
 aca:	0f 91       	pop	r16
 acc:	08 95       	ret

00000ace <__ultoa_invert>:
 ace:	fa 01       	movw	r30, r20
 ad0:	aa 27       	eor	r26, r26
 ad2:	28 30       	cpi	r18, 0x08	; 8
 ad4:	51 f1       	breq	.+84     	; 0xb2a <__ultoa_invert+0x5c>
 ad6:	20 31       	cpi	r18, 0x10	; 16
 ad8:	81 f1       	breq	.+96     	; 0xb3a <__ultoa_invert+0x6c>
 ada:	e8 94       	clt
 adc:	6f 93       	push	r22
 ade:	6e 7f       	andi	r22, 0xFE	; 254
 ae0:	6e 5f       	subi	r22, 0xFE	; 254
 ae2:	7f 4f       	sbci	r23, 0xFF	; 255
 ae4:	8f 4f       	sbci	r24, 0xFF	; 255
 ae6:	9f 4f       	sbci	r25, 0xFF	; 255
 ae8:	af 4f       	sbci	r26, 0xFF	; 255
 aea:	b1 e0       	ldi	r27, 0x01	; 1
 aec:	3e d0       	rcall	.+124    	; 0xb6a <__ultoa_invert+0x9c>
 aee:	b4 e0       	ldi	r27, 0x04	; 4
 af0:	3c d0       	rcall	.+120    	; 0xb6a <__ultoa_invert+0x9c>
 af2:	67 0f       	add	r22, r23
 af4:	78 1f       	adc	r23, r24
 af6:	89 1f       	adc	r24, r25
 af8:	9a 1f       	adc	r25, r26
 afa:	a1 1d       	adc	r26, r1
 afc:	68 0f       	add	r22, r24
 afe:	79 1f       	adc	r23, r25
 b00:	8a 1f       	adc	r24, r26
 b02:	91 1d       	adc	r25, r1
 b04:	a1 1d       	adc	r26, r1
 b06:	6a 0f       	add	r22, r26
 b08:	71 1d       	adc	r23, r1
 b0a:	81 1d       	adc	r24, r1
 b0c:	91 1d       	adc	r25, r1
 b0e:	a1 1d       	adc	r26, r1
 b10:	20 d0       	rcall	.+64     	; 0xb52 <__ultoa_invert+0x84>
 b12:	09 f4       	brne	.+2      	; 0xb16 <__ultoa_invert+0x48>
 b14:	68 94       	set
 b16:	3f 91       	pop	r19
 b18:	2a e0       	ldi	r18, 0x0A	; 10
 b1a:	26 9f       	mul	r18, r22
 b1c:	11 24       	eor	r1, r1
 b1e:	30 19       	sub	r19, r0
 b20:	30 5d       	subi	r19, 0xD0	; 208
 b22:	31 93       	st	Z+, r19
 b24:	de f6       	brtc	.-74     	; 0xadc <__ultoa_invert+0xe>
 b26:	cf 01       	movw	r24, r30
 b28:	08 95       	ret
 b2a:	46 2f       	mov	r20, r22
 b2c:	47 70       	andi	r20, 0x07	; 7
 b2e:	40 5d       	subi	r20, 0xD0	; 208
 b30:	41 93       	st	Z+, r20
 b32:	b3 e0       	ldi	r27, 0x03	; 3
 b34:	0f d0       	rcall	.+30     	; 0xb54 <__ultoa_invert+0x86>
 b36:	c9 f7       	brne	.-14     	; 0xb2a <__ultoa_invert+0x5c>
 b38:	f6 cf       	rjmp	.-20     	; 0xb26 <__ultoa_invert+0x58>
 b3a:	46 2f       	mov	r20, r22
 b3c:	4f 70       	andi	r20, 0x0F	; 15
 b3e:	40 5d       	subi	r20, 0xD0	; 208
 b40:	4a 33       	cpi	r20, 0x3A	; 58
 b42:	18 f0       	brcs	.+6      	; 0xb4a <__ultoa_invert+0x7c>
 b44:	49 5d       	subi	r20, 0xD9	; 217
 b46:	31 fd       	sbrc	r19, 1
 b48:	40 52       	subi	r20, 0x20	; 32
 b4a:	41 93       	st	Z+, r20
 b4c:	02 d0       	rcall	.+4      	; 0xb52 <__ultoa_invert+0x84>
 b4e:	a9 f7       	brne	.-22     	; 0xb3a <__ultoa_invert+0x6c>
 b50:	ea cf       	rjmp	.-44     	; 0xb26 <__ultoa_invert+0x58>
 b52:	b4 e0       	ldi	r27, 0x04	; 4
 b54:	a6 95       	lsr	r26
 b56:	97 95       	ror	r25
 b58:	87 95       	ror	r24
 b5a:	77 95       	ror	r23
 b5c:	67 95       	ror	r22
 b5e:	ba 95       	dec	r27
 b60:	c9 f7       	brne	.-14     	; 0xb54 <__ultoa_invert+0x86>
 b62:	00 97       	sbiw	r24, 0x00	; 0
 b64:	61 05       	cpc	r22, r1
 b66:	71 05       	cpc	r23, r1
 b68:	08 95       	ret
 b6a:	9b 01       	movw	r18, r22
 b6c:	ac 01       	movw	r20, r24
 b6e:	0a 2e       	mov	r0, r26
 b70:	06 94       	lsr	r0
 b72:	57 95       	ror	r21
 b74:	47 95       	ror	r20
 b76:	37 95       	ror	r19
 b78:	27 95       	ror	r18
 b7a:	ba 95       	dec	r27
 b7c:	c9 f7       	brne	.-14     	; 0xb70 <__ultoa_invert+0xa2>
 b7e:	62 0f       	add	r22, r18
 b80:	73 1f       	adc	r23, r19
 b82:	84 1f       	adc	r24, r20
 b84:	95 1f       	adc	r25, r21
 b86:	a0 1d       	adc	r26, r0
 b88:	08 95       	ret

00000b8a <_exit>:
 b8a:	f8 94       	cli

00000b8c <__stop_program>:
 b8c:	ff cf       	rjmp	.-2      	; 0xb8c <__stop_program>
